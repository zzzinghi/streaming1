plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2' apply false //루트 프로젝트에 적용하지 않음 -> 각 모듈별로 bootjat mainclass 지정
    id 'io.spring.dependency-management' version '1.1.6'
}

allprojects {
    group = 'com.sparta'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }


    //initSourceFolders : sub 모듈 별로 기초 디렉터리가 존재하지 않으면, 자동 생성해주도록 설정
    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }

        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }

    dependencies {

        //dev
        implementation 'org.springframework.boot:spring-boot-devtools'

        //spring
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        //lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        //test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}